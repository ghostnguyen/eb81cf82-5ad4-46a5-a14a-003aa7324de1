@model OAMS.Models.Rpt102
@using OAMS.Models
@{
    ViewBag.Title = "Summary Category";
}
<h2>
    Summary Category</h2>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <p>
        Cat1: @(Html.EditorFor(model => model.Cat1FullName, "AutoCompleteCategory", new { level = 1 }))
        Hide Cat2: @Html.EditorFor(r => r.HideCat2)
        <input type="submit" value="Ok" />
    </p>
    <div>
        @if (Model != null && Model.List != null)
        { 
            <table id="tblResult" class="display">
                <thead>
                    <tr>
                        <th>
                            Category 1
                        </th>
                        <th>
                            Category 2
                        </th>
                        @{ CodeMasterRepository codeMasterRepository = new CodeMasterRepository();
                           var typeL = codeMasterRepository.Get(CodeMasterType.Type); }
                        @foreach (var item in typeL)
                        {
                            <th>
                                @item.Code
                            </th>
                        }
                        <th>
                            Total
                        </th>
                    </tr>
                </thead>
                @{ var v1 = Model.List.GroupBy(r => r.Cat1).ToList(); }
                <tbody>
                    @foreach (var item in v1)
                    {
                        int total = 0;
                        <tr>
                            <td>
                                @item.Key
                            </td>
                            <td>
                            </td>
                            @foreach (var type in typeL)
                            {
                                int c = item.Where(r => r.Type == type.Code).Sum(r => r.Count);
                                total += c;
                                <td>
                                    @c
                                </td>
                            }
                            <td>
                                @total
                            </td>
                        </tr>
                            if (Model.HideCat2)
                            {
                            }
                            else
                            {
                                var v2 = item.Where(r => r.Cat2 != null)
                                    .GroupBy(r => r.Cat2).ToList();

                                foreach (var item2 in v2)
                                {

                                    int total2 = 0;
                        <tr>
                            <td>
                                @item.Key
                            </td>
                            <td>
                                @item2.Key
                            </td>
                            @foreach (var type in typeL)
                            {
                                int c = item2.Where(r => r.Type == type.Code).Sum(r => r.Count);
                                total2 += c;
                                <td>
                                    @c
                                </td>
                            }
                            <td>
                                @total2
                            </td>
                        </tr>   
	
                                }
                            }
                    }
                </tbody>
            </table>
        }
    </div>
    <script type="text/javascript">

        $(document).ready(function () {

            var oTable = $('#tblResult').dataTable({ "aaSorting": [[0, "asc"], [1, "asc"]],
                "sDom": 'CT<"clear">lfrtip',
                "oTableTools": { "sSwfPath": '@Url.Content("~/content/copy_cvs_xls_pdf.swf")', "aButtons": ["copy"] },
                "iDisplayLength": 100,
                "aLengthMenu": [[25, 50, 100, -1], [25, 50, 100, "All"]]
            });
        });
    </script>
    
}
