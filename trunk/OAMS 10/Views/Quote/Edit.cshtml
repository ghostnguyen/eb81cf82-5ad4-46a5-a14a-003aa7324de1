@model OAMS.Models.Quote
@{
    ViewBag.Title = "Edit Quote";
}
<h2>
    Edit</h2>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <div style="overflow: auto;">
        <table>
            <tr valign="top">
                <td>
                    <fieldset>
                        <legend>Fields</legend>
                        @Html.HiddenFor(model => model.ID)
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Number)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Number)
                            @Html.ValidationMessageFor(model => model.Number)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.QuoteType)
                        </div>
                        <div class="editor-field">
                            @Html.CodeMasterDropDownListFor(model => model.QuoteType)
                            @Html.ValidationMessageFor(model => model.QuoteType)
                        </div>
                        <div class="editor-label">
                            Supplier
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.ContractorName, "AutoCompleteContractor")
                            @Html.ValidationMessageFor(r => r.ContractorName)
                            @Html.TextBoxFor(model => model.ContractorID, new { @style = "visibility:collapse;" })
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ClientName)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.ClientName, "AutoCompleteClient")
                            @Html.ValidationMessageFor(r => r.ClientName)
                            @Html.TextBoxFor(model => model.ClientID, new { @style = "visibility:collapse;" })
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.SignedDate)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.SignedDate)
                            @Html.ValidationMessageFor(model => model.SignedDate)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ExpiredDate)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.ExpiredDate)
                            @Html.ValidationMessageFor(model => model.ExpiredDate)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.InspectionFrequency)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.InspectionFrequency) @Html.ValidationMessageFor(model
                            => model.InspectionFrequency)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ReportOn)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.ReportOn) @Html.ValidationMessageFor(model
                            => model.ReportOn)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Value)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Value) @Html.ValidationMessageFor(model
                            => model.Value)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.PaymentTerm)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.PaymentTerm) @Html.ValidationMessageFor(model
                            => model.PaymentTerm)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ContactName1)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.ContactName1) @Html.ValidationMessageFor(model
                            => model.ContactName1)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Phone1)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Phone1) @Html.ValidationMessageFor(model
                            => model.Phone1)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Email1)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Email1) @Html.ValidationMessageFor(model
                            => model.Email1)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ContactName2)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.ContactName2) @Html.ValidationMessageFor(model
                            => model.ContactName2)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Phone2)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Phone2) @Html.ValidationMessageFor(model
                            => model.Phone2)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Email2)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Email2) @Html.ValidationMessageFor(model
                            => model.Email2)
                        </div>
                        <p>
                            @(Html.ActionLinkWithRoles<OAMS.Controllers.QuoteController>("Save", r => r.Edit(0), null, null, true))
                        </p>
                    </fieldset>
                </td>
                <td>
                    @(Html.ActionLinkWithRoles<OAMS.Controllers.FindSiteController>("Add Sites", r => r.Find4Quote(0), new RouteValueDictionary(new { QuoteID = Model.ID }), null, false))
                    <br />
                    <div>
                        <table id="tblResult" class="display">
                            <thead>
                                <tr>
                                    <th>
                                        ID
                                    </th>
                                    <th>
                                    </th>                                    
                                    <th>
                                        Site ID
                                    </th>                                    
                                    <th>
                                         Months - MediaRate - ProductionFee
                                    </th>
                                    <th>
                                        Effective Date
                                    </th>
                                    <th>
                                        Term Date
                                    </th>
                                    <th>
                                        Geo Full Name
                                    </th>
                                    <th>
                                        Address Line1
                                    </th>
                                    <th>
                                        Address Line2
                                    </th>
                                    <th>
                                        Type
                                    </th>
                                    <th>
                                        Format
                                    </th>
                                    <th>
                                        Current Client
                                    </th>
                                    <th>
                                        Current Product
                                    </th>
                                    <th>
                                        Contractor
                                    </th>
                                    <th>
                                        Photo Count
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{ var editTemplate = Html.ActionLinkWithRoles<OAMS.Controllers.QuoteDetailController>("Edit", r => r.Edit(0), new RouteValueDictionary(new { id = "quoteDetailID" }), null, false);
                                   var removeTemplate = Html.ActionLinkWithRoles<OAMS.Controllers.QuoteDetailController>("Remove", r => r.Delete(0), new RouteValueDictionary(new { id = "quoteDetailID" }), new Dictionary<string, object>() { { "onclick", "return confirm('Sure?');" } }, false);
                                   foreach (var item in Model.QuoteDetails)
                                   {                                     
                                    <tr>
                                        <td>
                                            @item.ID
                                        </td>
                                        <td>
                                            @MvcHtmlString.Create(editTemplate.ToString().Replace("quoteDetailID", item.ID.ToString()))
                                            <br />
                                            <br />
                                            @MvcHtmlString.Create(removeTemplate.ToString().Replace("quoteDetailID", item.ID.ToString()))
                                        </td>                                        
                                        <td>
                                            @item.SiteID
                                        </td>                                        
                                        <td>
                                            @foreach (var item1 in item.QuoteDetailFees)
                                            {
                                                <div>
                                                    @item1.Months - @String.Format("{0:c}", item1.MediaRate) - @String.Format("{0:c}", item1.ProductionFee)
                                                </div>                                                
                                            }
                                        </td>
                                        <td>
                                            @String.Format("{0:d}", item.EffectiveDate)
                                        </td>
                                        <td>
                                            @String.Format("{0:d}", item.TermDate)
                                        </td>
                                        <td>
                                            @item.Site.GeoFullName
                                        </td>
                                        <td>
                                            @item.Site.AddressLine1
                                        </td>
                                        <td>
                                            @item.Site.AddressLine2
                                        </td>
                                        <td>
                                            @item.Type
                                        </td>
                                        <td>
                                            @item.Format
                                        </td>
                                        <td>
                                            @Model.ClientName
                                        </td>
                                        <td>
                                            @(item.Product == null ? "" : item.Product.Name)
                                        </td>
                                        <td>
                                            @item.Site.ContractorName
                                        </td>
                                        <td>
                                            @item.Site.SitePhotoes.Count
                                        </td>
                                    </tr>
                                   }
                                }
                            </tbody>
                        </table>
                    </div>
                    <div id="divEditDetail">
                    </div>
                </td>
            </tr>
        </table>
    </div>
}
<div>
    @(Html.ActionLinkWithRoles<OAMS.Controllers.QuoteController>("Back to List", r => r.Index(), null, null, false))
</div>
<script type="text/javascript" language="javascript">
        var oTable;
        $(document).ready(function () {
            oTable = $('#tblResult').dataTable({ "aaSorting": [[0, "desc"]], "iDisplayLength": 20,"sDom": 'C<"clear">lfrtip' });
            ShowHideCols();
        });
//    function ShowHideCols() {
//        oTable.fnSetColumnVis(3, $('#chkColID').attr('checked'));
//        oTable.fnSetColumnVis(4, $('#chkColPrice').attr('checked'));
//        oTable.fnSetColumnVis(5, $('#chkColProductionPrice').attr('checked'));
//        oTable.fnSetColumnVis(6, $('#chkColEffectiveDate').attr('checked'));
//        oTable.fnSetColumnVis(7, $('#chkColTermDate').attr('checked'));
//        oTable.fnSetColumnVis(8, $('#chkColGeoFullName').attr('checked'));
//        oTable.fnSetColumnVis(9, $('#chkColAddressLine1').attr('checked'));
//        oTable.fnSetColumnVis(10, $('#chkColAddressLine2').attr('checked'));
//        oTable.fnSetColumnVis(11, $('#chkColType').attr('checked'));
//        oTable.fnSetColumnVis(12, $('#chkColFormat').attr('checked'));
//        oTable.fnSetColumnVis(13, $('#chkColCurrentClient').attr('checked'));
//        oTable.fnSetColumnVis(14, $('#chkColCurrentProduct').attr('checked'));
//        oTable.fnSetColumnVis(15, $('#chkColContractor').attr('checked'));
//        oTable.fnSetColumnVis(16, $('#chkColPhotoCount').attr('checked'));
//    }

    function EditDetail(quoteDetailID) {
        $.ajax({
            url: @(Url.Content("~/QuoteDetail/Edit/"))  + quoteDetailID, type: "POST",
            success: function (data) {
                $("#divEditDetail").html(data).dialog({ modal: true });
            }
        })
    };
</script>
